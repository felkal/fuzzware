name: local

on:
  push:
    branches:
      - main
      - github-ci

jobs:

  ############################################
  #            Build                         #
  ############################################

  build_local:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3.0.0
      - run: git submodule sync --recursive
      - run: git submodule update --init --recursive
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get install -y python python3 python3-pip automake tmux redis wget autoconf sudo htop cmake clang vim unzip git binutils-arm-none-eabi
          pip3 install virtualenv virtualenvwrapper cython setuptools
      - uses: actions/cache@v3
        id: local_install_cache
        with:
          path: |
            /usr/lib/python3.8/
            /home/runner/.virtualenvs/
          key: ${{ runner.os }}-virtualenvs-7
      - name: install local
        if: steps.local_install_cache.outputs.cache-hit != 'true'
        run: ./install_local.sh
      - uses: actions/cache@v3
        with:
          path: |
            /home/runner/work/fuzzware/fuzzware
            /home/runner/.virtualenvs/
          key: ${{ runner.os }}-virtualenvs-7
      - name: fuzz ARCH_PRO docker
        run: |
          VIRTUALENVWRAPPER_PYTHON="${VIRTUALENVWRAPPER_PYTHON:=$(which python3)}"
          export VIRTUALENVWRAPPER_PYTHON
          source $(which virtualenvwrapper.sh)
          set +e
          workon fuzzware
          echo $VIRTUAL_ENV
          ls ~/.virtualenvs/

  ############################################
  #            Fuzzing                       #
  ############################################

  fuzzing_ARCH_PRO_docker:
    runs-on: ubuntu-20.04
    needs: build_local
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.0.0
      - uses: actions/cache@v3
        with:
          path: |
            /home/runner/work/fuzzware/fuzzware
            /home/runner/.virtualenvs/
          key: ${{ runner.os }}-virtualenvs-7
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get install -y tree python python3 python3-pip automake tmux redis wget autoconf sudo htop cmake clang vim unzip git binutils-arm-none-eabi
          sudo apt-get remove -y virtualenvwrapper
          pip3 install virtualenv virtualenvwrapper cython setuptools
      - name: Setup AFL
        run: echo core | sudo tee /proc/sys/kernel/core_pattern
      - name: fuzz ARCH_PRO docker
        run: |
          VIRTUALENVWRAPPER_PYTHON="${VIRTUALENVWRAPPER_PYTHON:=$(which python3)}"
          export VIRTUALENVWRAPPER_PYTHON
          source $(which virtualenvwrapper.sh)
          set +e
          workon fuzzware
          echo lel
          echo $VIRTUAL_ENV
          echo lel
          /home/runner/work/fuzzware/fuzzware/pipeline
          echo emulator
          /home/runner/work/fuzzware/fuzzware/emulator
          pip3 show fuzzware
          pip3 show fuzzware-pipeline
          fuzzware pipeline --no-tty --skip-afl-cpufreq --run-for 00:00:00:10 -n 2 ./examples/pw-recovery/ARCH_PRO
      - uses: actions/cache@v3
        with:
          path: examples/pw-recovery/ARCH_PRO/fuzzware-project
          key: ${{ runner.os }}-fuzzware-project-local
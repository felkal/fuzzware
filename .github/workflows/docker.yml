name: docker

on:
  push:
    branches:
      - main
      - github-ci

jobs:
  build_docker:
    runs-on: ubuntu-20.04
    steps:
      - name: Build fuzzware docker image
        uses: actions/checkout@v3.0.0
      - name: Cache project
        id: build_docker_cache
        uses: actions/cache@v3
        with:
          path: fuzzware_latest.tar
          key: ${{ runner.os }}-dockerbuild
      - run: git submodule sync --recursive
      - run: git submodule update --init --recursive
      - name: build
        if: steps.build_docker_cache.outputs.cache-hit != 'true'
        run: ./build_docker.sh
      - name: Cache project
        uses: actions/cache@v3
        with:
          path: fuzzware_latest.tar
          key: ${{ runner.os }}-dockerbuild
  fuzzing_ARCH_PRO_docker:
    runs-on: ubuntu-20.04
    needs: build_docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.0.0
      - uses: actions/cache@v3
        with:
          path: fuzzware_latest.tar
          key: ${{ runner.os }}-dockerbuild
      - name: load fuzzware image
        run: docker load -i fuzzware_latest.tar
      - name: Setup AFL
        run: echo core | sudo tee /proc/sys/kernel/core_pattern
      - name: fuzz ARCH_PRO docker
        run: ./run_docker.sh --no-tty ./examples fuzzware pipeline --skip-afl-cpufreq -p fuzzware-project-docker --run-for 00:00:00:10 -n 2 ./pw-recovery/ARCH_PRO
      - uses: actions/cache@v3
        with:
          path: examples/pw-recovery/ARCH_PRO/fuzzware-project-docker
          key: ${{ runner.os }}-arch-pro
  fuzzing_CNC_docker:
    runs-on: ubuntu-20.04
    needs: build_docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.0.0
      - uses: actions/cache@v3
        with:
          path: fuzzware_latest.tar
          key: ${{ runner.os }}-dockerbuild
      - name: load fuzzware image
        run: docker load -i fuzzware_latest.tar
      - name: Setup AFL
        run: echo core | sudo tee /proc/sys/kernel/core_pattern
      - name: Fuzz CNC docker
        run: ./run_docker.sh --no-tty ./examples fuzzware pipeline --skip-afl-cpufreq -p fuzzware-project-docker --run-for 00:00:00:10 -n 2 ./P2IM/CNC
      - uses: actions/cache@v3
        with:
          path: examples/P2IM/CNC/fuzzware-project-docker
          key: ${{ runner.os }}-cnc

  fuzzware_cov_main_arch_pro_docker:
    runs-on: ubuntu-20.04
    needs: fuzzing_ARCH_PRO_docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.0.0
      - uses: actions/cache@v3
        with:
          path: fuzzware_latest.tar
          key: ${{ runner.os }}-dockerbuild
      - uses: actions/cache@v3
        with:
          path: examples/pw-recovery/ARCH_PRO/fuzzware-project-docker
          key: ${{ runner.os }}-arch-pro
      - name: load fuzzware image
        run: docker load -i fuzzware_latest.tar
      - run: ./run_docker.sh --no-tty ./examples/pw-recovery/ARCH_PRO/fuzzware-project-docker fuzzware cov main

  fuzzware_emu_docker:
    runs-on: ubuntu-20.04
    needs: fuzzing_ARCH_PRO_docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.0.0
      - uses: actions/cache@v3
        with:
          path: fuzzware_latest.tar
          key: ${{ runner.os }}-dockerbuild
      - uses: actions/cache@v3
        with:
          path: examples/pw-recovery/ARCH_PRO/fuzzware-project-docker
          key: ${{ runner.os }}-arch-pro
      - name: load fuzzware image
        run: docker load -i fuzzware_latest.tar
      - run: ./run_docker.sh --no-tty . fuzzware emu ./examples/pw-recovery/ARCH_PRO/basic_exercises.elf --config ./examples/pw-recovery/ARCH_PRO/config.yml -v

  fuzzware_replay_docker:
    runs-on: ubuntu-20.04
    needs: fuzzing_ARCH_PRO_docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.0.0
      - uses: actions/cache@v3
        with:
          path: fuzzware_latest.tar
          key: ${{ runner.os }}-dockerbuild
      - uses: actions/cache@v3
        with:
          path: examples/pw-recovery/ARCH_PRO/fuzzware-project-docker
          key: ${{ runner.os }}-arch-pro
      - name: load fuzzware image
        run: docker load -i fuzzware_latest.tar
      - run: ./run_docker.sh --no-tty ./examples/pw-recovery/ARCH_PRO/fuzzware-project-docker/ fuzzware replay --covering main -v


  fuzzware_gentraces_docker:
    runs-on: ubuntu-20.04
    needs: fuzzing_ARCH_PRO_docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.0.0
      - uses: actions/cache@v3
        with:
          path: fuzzware_latest.tar
          key: ${{ runner.os }}-dockerbuild
      - uses: actions/cache@v3
        with:
          path: examples/pw-recovery/ARCH_PRO/fuzzware-project-docker
          key: ${{ runner.os }}-arch-pro
      - name: load fuzzware image
        run: docker load -i fuzzware_latest.tar
      - run: ./run_docker.sh --no-tty ./examples/pw-recovery/ARCH_PRO/fuzzware-project-docker fuzzware gentraces --dryrun

  fuzzware_genstats_CNC_docker:
    runs-on: ubuntu-20.04
    needs: fuzzing_CNC_docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.0.0
      - uses: actions/cache@v3
        with:
          path: fuzzware_latest.tar
          key: ${{ runner.os }}-dockerbuild
      - uses: actions/cache@v3
        with:
          path: examples/P2IM/CNC/fuzzware-project-docker
          key: ${{ runner.os }}-cnc
      - name: load fuzzware image
        run: docker load -i fuzzware_latest.tar
      - run: ./run_docker.sh --no-tty ./examples/P2IM/CNC/fuzzware-project-docker fuzzware gentraces --dryrun
